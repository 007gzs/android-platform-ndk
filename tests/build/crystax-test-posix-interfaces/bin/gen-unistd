#!/bin/bash

# Copyright (c) 2011-2014 CrystaX .NET.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
#    1. Redistributions of source code must retain the above copyright notice, this list of
#       conditions and the following disclaimer.
#
#    2. Redistributions in binary form must reproduce the above copyright notice, this list
#       of conditions and the following disclaimer in the documentation and/or other materials
#       provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY CrystaX .NET ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CrystaX .NET OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those of the
# authors and should not be interpreted as representing official policies, either expressed
# or implied, of CrystaX .NET.

gen()
{
    local name=$1
    echo "#if !defined(${name}) || ${name} == -1"
    echo "#error Wrong ${name}"
    echo "#endif"
}

gen _POSIX_CHOWN_RESTRICTED
gen _POSIX_NO_TRUNC

gen()
{
    local name=$1
    echo "#if !defined(${name}) || ${name} <= 0"
    echo "#error Wrong ${name}"
    echo "#endif"
}

gen _POSIX_JOB_CONTROL
echo "#if !__ANDROID__"
gen _POSIX_SHELL
echo "#endif"

gen()
{
    local name=$1
    echo "#if !defined(${name}) || ${name} != CRYSTAX_POSIX_VERSION"
    echo "#error Wrong ${name}"
    echo "#endif"
}

gen _POSIX_MAPPED_FILES
gen _POSIX_READER_WRITER_LOCKS
echo "#if !__gnu_linux__"
gen _POSIX_REGEXP
gen _POSIX_SAVED_IDS
echo "#endif"
echo "#if !__ANDROID__"
gen _POSIX_THREAD_SAFE_FUNCTIONS
echo "#endif"
gen _POSIX_THREADS

gen()
{
    local name=$1
    echo "#if defined(${name})"
    echo "#if ${name} != -1 && ${name} != 0 && ${name} != CRYSTAX_POSIX_VERSION"
    echo "#error Wrong ${name}"
    echo "#endif"
    echo "#endif /* defined(${name}) */"
}

gen _POSIX_ADVISORY_INFO
gen _POSIX_ASYNCHRONOUS_IO
gen _POSIX_BARRIERS
gen _POSIX_CLOCK_SELECTION
gen _POSIX_CPUTIME
gen _POSIX_FSYNC
gen _POSIX_IPV6
gen _POSIX_MEMLOCK
gen _POSIX_MEMLOCK_RANGE
gen _POSIX_MESSAGE_PASSING
gen _POSIX_MONOTONIC_CLOCK
gen _POSIX_PRIORITIZED_IO
gen _POSIX_PRIORITY_SCHEDULING
gen _POSIX_RAW_SOCKETS
gen _POSIX_REALTIME_SIGNALS
gen _POSIX_SEMAPHORES
gen _POSIX_SHARED_MEMORY_OBJECTS
gen _POSIX_SPAWN
gen _POSIX_SPIN_LOCKS
gen _POSIX_SPORADIC_SERVER
gen _POSIX_SYNCHRONIZED_IO
gen _POSIX_THREAD_ATTR_STACKADDR
gen _POSIX_THREAD_ATTR_STACKSIZE
gen _POSIX_THREAD_CPUTIME
gen _POSIX_THREAD_PRIORITY_SCHEDULING
gen _POSIX_THREAD_PRIO_INHERIT
gen _POSIX_THREAD_PRIO_PROTECT
gen _POSIX_THREAD_PROCESS_SHARED
gen _POSIX_THREAD_ROBUST_PRIO_INHERIT
gen _POSIX_THREAD_ROBUST_PRIO_PROTECT
gen _POSIX_THREAD_SPORADIC_SERVER
gen _POSIX_TIMEOUTS
gen _POSIX_TIMERS
gen _POSIX_TYPED_MEMORY_OBJECTS

gen()
{
    local name=$1
    echo "#if !defined(${name}) || (${name} != -1 && ${name} != 0 && ${name} != CRYSTAX_POSIX_VERSION)"
    echo "#error Wrong ${name}"
    echo "#endif"
}

gen _POSIX_MEMORY_PROTECTION

gen()
{
    local name=$1
    echo "#if !defined(${name})"
    echo "#error '${name}' not defined"
    echo "#endif"
}

gen F_OK
gen R_OK
gen W_OK
gen X_OK

for f in F R W X; do
    for s in F R W X; do
        test "$f" = "$s" && continue
        echo "#if ${f}_OK == ${s}_OK"
        echo "#error '${f}_OK' and '${s}_OK' have the same value"
        echo "#endif"
    done
done

echo "#if (R_OK|W_OK) == (R_OK|X_OK) || (R_OK|W_OK) == (R_OK|W_OK|X_OK) || (R_OK|X_OK) == (R_OK|W_OK|X_OK)"
echo "#error Wrong R_OK or W_OK or X_OK"
echo "#endif"

gen F_LOCK
gen F_TEST
gen F_TLOCK
gen F_ULOCK

gen _PC_2_SYMLINKS
gen _PC_ALLOC_SIZE_MIN
gen _PC_ASYNC_IO
gen _PC_CHOWN_RESTRICTED
gen _PC_FILESIZEBITS
gen _PC_LINK_MAX
gen _PC_MAX_CANON
gen _PC_MAX_INPUT
gen _PC_NAME_MAX
gen _PC_NO_TRUNC
gen _PC_PATH_MAX
gen _PC_PIPE_BUF
gen _PC_PRIO_IO
gen _PC_REC_INCR_XFER_SIZE
gen _PC_REC_MAX_XFER_SIZE
gen _PC_REC_MIN_XFER_SIZE
gen _PC_REC_XFER_ALIGN
gen _PC_SYMLINK_MAX
gen _PC_SYNC_IO
#gen _PC_TIMESTAMP_RESOLUTION
gen _PC_VDISABLE

gen _SC_2_C_BIND
gen _SC_2_C_DEV
gen _SC_2_CHAR_TERM
gen _SC_2_FORT_DEV
gen _SC_2_FORT_RUN
gen _SC_2_LOCALEDEF
gen _SC_2_PBS
gen _SC_2_PBS_ACCOUNTING
gen _SC_2_PBS_CHECKPOINT
gen _SC_2_PBS_LOCATE
gen _SC_2_PBS_MESSAGE
gen _SC_2_PBS_TRACK
gen _SC_2_SW_DEV
gen _SC_2_UPE
gen _SC_2_VERSION
gen _SC_ADVISORY_INFO
gen _SC_AIO_LISTIO_MAX
gen _SC_AIO_MAX
gen _SC_AIO_PRIO_DELTA_MAX
gen _SC_ARG_MAX
gen _SC_ASYNCHRONOUS_IO
gen _SC_ATEXIT_MAX
gen _SC_BARRIERS
gen _SC_BC_BASE_MAX
gen _SC_BC_DIM_MAX
gen _SC_BC_SCALE_MAX
gen _SC_BC_STRING_MAX
gen _SC_CHILD_MAX
gen _SC_CLK_TCK
gen _SC_CLOCK_SELECTION
gen _SC_COLL_WEIGHTS_MAX
gen _SC_CPUTIME
gen _SC_DELAYTIMER_MAX
gen _SC_EXPR_NEST_MAX
gen _SC_FSYNC
gen _SC_GETGR_R_SIZE_MAX
gen _SC_GETPW_R_SIZE_MAX
gen _SC_HOST_NAME_MAX
gen _SC_IOV_MAX
gen _SC_IPV6
gen _SC_JOB_CONTROL
gen _SC_LINE_MAX
gen _SC_LOGIN_NAME_MAX
gen _SC_MAPPED_FILES
gen _SC_MEMLOCK
gen _SC_MEMLOCK_RANGE
gen _SC_MEMORY_PROTECTION
gen _SC_MESSAGE_PASSING
gen _SC_MONOTONIC_CLOCK
gen _SC_MQ_OPEN_MAX
gen _SC_MQ_PRIO_MAX
gen _SC_NGROUPS_MAX
gen _SC_OPEN_MAX
gen _SC_PAGE_SIZE
gen _SC_PAGESIZE
gen _SC_PRIORITIZED_IO
gen _SC_PRIORITY_SCHEDULING
gen _SC_RAW_SOCKETS
gen _SC_RE_DUP_MAX
gen _SC_READER_WRITER_LOCKS
gen _SC_REALTIME_SIGNALS
gen _SC_REGEXP
gen _SC_RTSIG_MAX
gen _SC_SAVED_IDS
gen _SC_SEM_NSEMS_MAX
gen _SC_SEM_VALUE_MAX
gen _SC_SEMAPHORES
gen _SC_SHARED_MEMORY_OBJECTS
gen _SC_SHELL
gen _SC_SIGQUEUE_MAX
gen _SC_SPAWN
gen _SC_SPIN_LOCKS
gen _SC_SPORADIC_SERVER
gen _SC_SS_REPL_MAX
gen _SC_STREAM_MAX
gen _SC_SYMLOOP_MAX
gen _SC_SYNCHRONIZED_IO
gen _SC_THREAD_ATTR_STACKADDR
gen _SC_THREAD_ATTR_STACKSIZE
gen _SC_THREAD_CPUTIME
gen _SC_THREAD_DESTRUCTOR_ITERATIONS
gen _SC_THREAD_KEYS_MAX
gen _SC_THREAD_PRIO_INHERIT
gen _SC_THREAD_PRIO_PROTECT
gen _SC_THREAD_PRIORITY_SCHEDULING
gen _SC_THREAD_PROCESS_SHARED
echo "#if !__APPLE__"
gen _SC_THREAD_ROBUST_PRIO_INHERIT
gen _SC_THREAD_ROBUST_PRIO_PROTECT
echo "#endif"
gen _SC_THREAD_SAFE_FUNCTIONS
gen _SC_THREAD_SPORADIC_SERVER
gen _SC_THREAD_STACK_MIN
gen _SC_THREAD_THREADS_MAX
gen _SC_THREADS
gen _SC_TIMEOUTS
gen _SC_TIMER_MAX
gen _SC_TIMERS
gen _SC_TRACE
gen _SC_TRACE_EVENT_FILTER
gen _SC_TRACE_EVENT_NAME_MAX
gen _SC_TRACE_INHERIT
gen _SC_TRACE_LOG
gen _SC_TRACE_NAME_MAX
gen _SC_TRACE_SYS_MAX
gen _SC_TRACE_USER_EVENT_MAX
gen _SC_TTY_NAME_MAX
gen _SC_TYPED_MEMORY_OBJECTS
gen _SC_TZNAME_MAX
gen _SC_VERSION
gen _SC_XOPEN_CRYPT
gen _SC_XOPEN_ENH_I18N
gen _SC_XOPEN_REALTIME
gen _SC_XOPEN_REALTIME_THREADS
gen _SC_XOPEN_SHM
gen _SC_XOPEN_STREAMS
gen _SC_XOPEN_UNIX
echo "#if !__APPLE__ && !__gnu_linux__"
gen _SC_XOPEN_UUCP
echo "#endif"
gen _SC_XOPEN_VERSION

gen STDERR_FILENO
gen STDIN_FILENO
gen STDOUT_FILENO
