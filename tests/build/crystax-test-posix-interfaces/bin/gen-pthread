#!/bin/bash

# Copyright (c) 2011-2014 CrystaX .NET.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
#    1. Redistributions of source code must retain the above copyright notice, this list of
#       conditions and the following disclaimer.
#
#    2. Redistributions in binary form must reproduce the above copyright notice, this list
#       of conditions and the following disclaimer in the documentation and/or other materials
#       provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY CrystaX .NET ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CrystaX .NET OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those of the
# authors and should not be interpreted as representing official policies, either expressed
# or implied, of CrystaX .NET.

revlist()
{
    echo "$@" | awk '
        {
            n = split($0, words);
            for (i=n; i>0; i--) {
                printf "%s ", words[i]
            }
        }
        END {
            printf("\n")
        }'
}

gen()
{
    local name=$1
    shift
    local conditions="$@"
    if [ -z "$name" ]; then
        echo "ERROR: empty name passed to 'gen' function" 1>&2
        exit 1
    fi
    for cond in $conditions; do
        echo "#if ${cond}"
    done
    echo "#if !defined(${name})"
    echo "#error ${name} not defined"
    echo "#endif /* !defined(${name}) */"
    for cond in $(revlist $conditions); do
        echo "#endif /* ${cond} */"
    done
}

gene()
{
    local name=$1
    if [ -z "$name" ]; then
        echo "ERROR: empty name passed to 'gen' function" 1>&2
        exit 1
    fi
    echo "int pthread_check_enum_${name} = ${name};"
}

echo "#if defined(_POSIX_BARRIERS) && _POSIX_BARRIERS > 0"
gen PTHREAD_BARRIER_SERIAL_THREAD
echo "#endif"

gen PTHREAD_CANCEL_ASYNCHRONOUS !__ANDROID__
gen PTHREAD_CANCEL_ENABLE       !__ANDROID__
gen PTHREAD_CANCEL_DEFERRED     !__ANDROID__
gen PTHREAD_CANCEL_DISABLE      !__ANDROID__
gen PTHREAD_CANCELED            !__ANDROID__

gen PTHREAD_COND_INITIALIZER
gen PTHREAD_CREATE_DETACHED
gen PTHREAD_CREATE_JOINABLE

gen PTHREAD_EXPLICIT_SCHED !__ANDROID__
gen PTHREAD_INHERIT_SCHED  !__ANDROID__

gen PTHREAD_MUTEX_DEFAULT    !__gnu_linux__
gen PTHREAD_MUTEX_ERRORCHECK !__gnu_linux__
gen PTHREAD_MUTEX_NORMAL     !__gnu_linux__
gen PTHREAD_MUTEX_RECURSIVE  !__gnu_linux__

gen PTHREAD_MUTEX_INITIALIZER
echo "#if !__gnu_linux__ && (!__APPLE__ || defined(__MAC_10_7))"
gen PTHREAD_RECURSIVE_MUTEX_INITIALIZER
gen PTHREAD_ERRORCHECK_MUTEX_INITIALIZER
echo "#endif"

gen PTHREAD_ONCE_INIT

echo "#if defined(_POSIX_THREAD_PRIO_INHERIT) && _POSIX_THREAD_PRIO_INHERIT > 0"
gen PTHREAD_PRIO_INHERIT !__ANDROID__
echo "#endif"

echo "#if defined(_POSIX_THREAD_PRIO_INHERIT) && _POSIX_THREAD_PRIO_INHERIT > 0 && \\"
echo "    defined(_POSIX_THREAD_PRIO_PROTECT) && _POSIX_THREAD_PRIO_PROTECT > 0"
gen PTHREAD_PRIO_NONE    !__ANDROID__
echo "#endif"

echo "#if defined(_POSIX_THREAD_PRIO_PROTECT) && _POSIX_THREAD_PRIO_PROTECT > 0"
gen PTHREAD_PRIO_PROTECT !__ANDROID__
echo "#endif"

gen PTHREAD_PROCESS_SHARED
gen PTHREAD_PROCESS_PRIVATE

echo "#if defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && _POSIX_THREAD_PRIORITY_SCHEDULING > 0"
gen PTHREAD_SCOPE_PROCESS
gen PTHREAD_SCOPE_SYSTEM
echo "#endif"
