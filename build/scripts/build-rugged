#!/usr/bin/env ruby
#
# Build LIBSSH2 to use it with Crystax NDK's vendor utils
#
# Copyright (c) 2015 CrystaX .NET.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#    1. Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#    2. Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY CrystaX .NET ''AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL CrystaX .NET OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation
# are those of the authors and should not be interpreted as representing
# official policies, either expressed or implied, of CrystaX .NET.
#

require_relative 'versions.rb'

module Crystax

  PKG_NAME = 'rugged'

end

require 'fileutils'
require_relative 'logger.rb'
require_relative 'commander.rb'
require_relative 'builder.rb'
require_relative 'cache.rb'


def check_version
  require_relative "#{Common::SRC_DIR}/lib/rugged/version.rb"
  if Rugged::Version != Crystax::VERSIONS['rugged']
    raise "bad rugged version: repository: #{Rugged::Version}; expected: #{Crystax::VERSIONS['rugged']}"
  end
end


#todo: check ruby arch dir in ruby archive
def ruby_arch
  case Common.target_platform
  when /darwin/
    'x86_64-darwin10'
  when 'linux-x86_64'
    'x86_64-linux'
  when 'linux-x86'
    'i686-linux'
  when /windows/
    'x64-mingw64'
  end
end


def ruby_base_ver
  major, minor, _ = RUBY_VERSION.split('.')
  "#{major}.#{minor}.0"
end


begin
  Common.parse_options

  Logger.open_log_file Common.log_file
  archive = Common.make_archive_name
  Logger.msg "building #{archive}; args: #{ARGV}"

  if Cache.try?(archive)
    Logger.msg "done"
    exit 0
  end

  openssldir = Builder.prepare_dependency('openssl')
  libssh2dir = Builder.prepare_dependency('libssh2')
  libgit2dir = Builder.prepare_dependency('libgit2')
  rubydir    = Builder.prepare_dependency('ruby')

  Logger.msg "= building rugged"
  check_version
  Builder.copy_sources
  FileUtils.cd(Common::BUILD_DIR) do
    FileUtils.mv 'ext/rugged/extconf.rb.crystax', 'ext/rugged/extconf.rb'
    dir = 'vendor/libgit2/tests'
    FileUtils.mkdir_p dir
    FileUtils.cp_r "#{Common::VENDOR_DIR}/libgit2/tests/resources", dir
    incdirs = ["-I#{openssldir}/include", "-I#{libssh2dir}/include", "-I#{libgit2dir}/include"]
    env = { 'CC'                => Builder.cc,
            'CFLAGS'            => "#{Builder.cflags} #{incdirs.join(' ')}",
            'LDFLAGS'           => "-L#{openssldir}/lib -L#{libssh2dir}/lib -L#{libgit2dir}/lib",
            'LOCAL_LIBS'        => "-lgit2 -lssh2 -lssl -lcrypto",
            'RUBY_INC_DIR'      => "#{rubydir}/include/ruby-#{ruby_base_ver}",
            'RUBY_ARCH_INC_DIR' => "#{rubydir}/include/ruby-#{ruby_base_ver}/#{ruby_arch}",
            'RUGGED_MAKEFILE'   => "#{Common::BUILD_DIR}/tmp/#{RUBY_PLATFORM}/rugged/#{RUBY_VERSION}/Makefile",
            'PATH'              => '/bin:/usr/bin:/sbin:/usr/sbin'
            # todo: 'SSL_CERT_FILE'     => '/usr/local/etc/openssl/cert.pem' #Builder.ssl_cert_file
          }
    Commander::run env, "rake compile:rugged gem"
    Commander::run env, "rake test" unless Common.no_check? or Common.different_os?
  end

  FileUtils.mkdir_p "#{Common.install_dir}/gem"
  FileUtils.cp Dir["#{Common::BUILD_DIR}/pkg/*.gem"], "#{Common.install_dir}/gem/"
  Cache.add(archive)

rescue SystemExit => e
  exit e.status
rescue Exception => e
  Logger.log_exception(e)
  exit 1
else
  Builder.clean
end
