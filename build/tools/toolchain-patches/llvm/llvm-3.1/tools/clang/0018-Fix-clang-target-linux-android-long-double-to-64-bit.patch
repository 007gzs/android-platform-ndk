From 7f878fea9aad6f205ddf6212abf30720778e2595 Mon Sep 17 00:00:00 2001
From: Andrew Hsieh <andrewhsieh@google.com>
Date: Thu, 27 Sep 2012 17:07:53 +0800
Subject: [PATCH 18/20] Fix clang -target *-linux-android long double to
 64-bit

To be consistent with Android and its GCC counterpart
i686-linux-android-gcc (since 65cadbba7f7e816b4b2bff752808b7429d0d0f2a)
---
 lib/Basic/Targets.cpp |   21 ++++++++++++++++-----
 1 files changed, 16 insertions(+), 5 deletions(-)

diff --git a/lib/Basic/Targets.cpp b/lib/Basic/Targets.cpp
index 9a9c19e..5fae886 100644
--- a/lib/Basic/Targets.cpp
+++ b/lib/Basic/Targets.cpp
@@ -1398,8 +1398,11 @@ public:
     : TargetInfo(triple), SSELevel(NoSSE), MMX3DNowLevel(NoMMX3DNow),
       HasAES(false), HasLZCNT(false), HasBMI(false), HasBMI2(false),
       HasPOPCNT(false), HasFMA4(false), CPU(CK_Generic) {
+    llvm::Triple Triple = llvm::Triple(triple);
+    const bool isAndroid = Triple.getEnvironment() == llvm::Triple::ANDROID;
     BigEndian = false;
-    LongDoubleFormat = &llvm::APFloat::x87DoubleExtended;
+    if (!isAndroid)
+      LongDoubleFormat = &llvm::APFloat::x87DoubleExtended;
   }
   virtual unsigned getFloatEvalMethod() const {
     // X87 evaluates with 80 bits "long double" precision.
@@ -2207,13 +2210,21 @@ namespace {
 class X86_32TargetInfo : public X86TargetInfo {
 public:
   X86_32TargetInfo(const std::string& triple) : X86TargetInfo(triple) {
+    llvm::Triple Triple = llvm::Triple(triple);
+    const bool isAndroid = Triple.getEnvironment() == llvm::Triple::ANDROID;
     DoubleAlign = LongLongAlign = 32;
-    LongDoubleWidth = 96;
+    if (!isAndroid)
+      LongDoubleWidth = 96;
     LongDoubleAlign = 32;
     SuitableAlign = 128;
-    DescriptionString = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-"
-                        "i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-"
-                        "a0:0:64-f80:32:32-n8:16:32-S128";
+    if (!isAndroid)
+      DescriptionString = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-"
+                          "i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-"
+                          "a0:0:64-f80:32:32-n8:16:32-S128";
+    else
+      DescriptionString = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-"
+                          "i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-"
+                          "a0:0:64-n8:16:32-S128";
     SizeType = UnsignedInt;
     PtrDiffType = SignedInt;
     IntPtrType = SignedInt;
-- 
1.7.7.3

