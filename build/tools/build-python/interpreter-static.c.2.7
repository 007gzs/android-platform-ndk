#include <Python.h>

#include <python_module__ctypes.h>
#include <python_module__multiprocessing.h>
#include <python_module__socket.h>
#ifdef NDK_HAVE_OPENSSL_SUPPORT
#include <python_module__ssl.h>
#endif
#include <python_module__sqlite3.h>
#include <python_module_pyexpat.h>
#include <python_module_select.h>
#include <python_module_unicodedata.h>

extern struct _frozen _PyImport_FrozenStdlibModules[];

static struct _inittab extensions[] = {
  {"_ctypes", init_ctypes},
  {"_multiprocessing", init_multiprocessing},
  {"_socket", init_socket},
#ifdef NDK_HAVE_OPENSSL_SUPPORT
  {"_ssl", init_ssl},
#endif
  {"_sqlite3", init_sqlite3},
  {"pyexpat", initpyexpat},
  {"select", initselect},
  {"unicodedata", initunicodedata},
  {0, 0}
};

static void GetExecutablePath(char* path)
{
  int size = readlink("/proc/self/exe", path, PATH_MAX);
  if (size < 0)
    size = 0;
  path[size] = 0;
}

int main(int argc, char** argv)
{
  char executable[PATH_MAX + 1] = {0};
  const char syspath[] = "";

  GetExecutablePath(executable);

  Py_SetProgramName(executable);
  Py_SetPath(syspath);
  PyImport_FrozenModules = _PyImport_FrozenStdlibModules;
  PyImport_ExtendInittab(extensions);
  return Py_Main(argc, argv);
}
