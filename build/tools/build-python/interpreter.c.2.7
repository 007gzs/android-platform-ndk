#include <Python.h>

#define PYTHON2_STDLIB_REL_PATH "stdlib.zip"
#define PYTHON2_MODULES_REL_PATH "modules"

#define SYS_PATH_BUFFER_SIZE (2*(PATH_MAX + 1))


static void GetExecutablePath(char* path)
{
  int size = readlink("/proc/self/exe", path, PATH_MAX);
  if (size < 0)
    size = 0;
  path[size] = 0;
}

static void GetRelativePathFormat(char* base, char* fmt)
{
  unsigned idx;
  char *p, *end;
  end = strrchr(base, '/');
  for (idx = 0, p = base; *p; ++p, ++idx)
  {
    fmt[idx] = *p;
    if (p == end)
      break;
  }
  fmt[++idx] = '%';
  fmt[++idx] = 's';
  fmt[++idx] = 0;
}

int main(int argc, char** argv)
{
  char executable[PATH_MAX + 1] = {0};
  char pthfmt[PATH_MAX + 1]     = {0};
  char stdlibpath[PATH_MAX + 1] = {0};
  char modpath[PATH_MAX + 1]    = {0};
  char syspath[SYS_PATH_BUFFER_SIZE] = {0};

  GetExecutablePath(executable);
  GetRelativePathFormat(executable, pthfmt);

  snprintf(stdlibpath, PATH_MAX, pthfmt, PYTHON2_STDLIB_REL_PATH);
  snprintf(modpath, PATH_MAX, pthfmt, PYTHON2_MODULES_REL_PATH);
  snprintf(syspath, SYS_PATH_BUFFER_SIZE-1, "%s:%s", stdlibpath, modpath);

  Py_SetProgramName(executable);
  Py_SetPath(syspath);
  return Py_Main(argc, argv);
}
