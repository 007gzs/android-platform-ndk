#include "Python.h"
#include "osdefs.h"

static char EMPTY_STR[1] = {0};
static char* module_search_path = NULL;
static char prog_path[MAXPATHLEN + 1] = {0};
static int calculated = 0;

static char* prefix = EMPTY_STR;
static char* exec_prefix = EMPTY_STR;

static void
calculate_path(void)
{
    if (module_search_path == NULL) {
        module_search_path = (char*)PyMem_Malloc(sizeof(char));
        module_search_path[0] = 0;
    }
    int size = readlink("/proc/self/exe", prog_path, MAXPATHLEN);
    if (size < 0)
        size = 0;
    prog_path[size] = 0;
    calculated = 1;
}

/* External interface */

char *
Py_GetPath(void)
{
    if (!calculated)
        calculate_path();
    return module_search_path;
}

char *
Py_GetPrefix(void)
{
    if (!calculated)
        calculate_path();
    return prefix;
}

char *
Py_GetExecPrefix(void)
{
    if (!calculated)
        calculate_path();
    return exec_prefix;
}

char *
Py_GetProgramFullPath(void)
{
    if (!calculated)
        calculate_path();
    return prog_path;
}

PyAPI_FUNC(void)
Py_SetPath(char *path)
{
    if (module_search_path != NULL) {
        PyMem_Free(module_search_path);
        module_search_path = NULL;
    }
    if (path != NULL) {
        module_search_path = (char *)PyMem_Malloc((strlen(path) + 1) * sizeof(char));
        strcpy(module_search_path, path);
    }
    else {
        module_search_path = (char *)PyMem_Malloc(sizeof(char));
        module_search_path[0] = 0;
    }
    if (!calculated)
        calculate_path();
}
