#!/bin/bash

cd $(dirname $0)/.. || exit 1

CRYSTAX_SRCDIR=$(pwd)

target=
action=

usage()
{
    echo "Usage: $0 [options]"
    echo ""
    echo "Required options (one of them):"
    echo "  --sources             Print out all source files"
    echo "  --cflags              Print out flags for compiler"
    echo ""
    echo "Optional:"
    echo "  --target=ABI          Target ABI (armeabi, armeabi-v7a etc)"
}

check_action()
{
    if [ "x$action" != "x" ]; then
        echo "ERROR: You already specified $action option" 1>&2
        usage 1>&2
        exit 1
    fi
}

while [ "x$1" != "x" ]; do
    arg=$1
    shift
    case $arg in
        --target=*)
            target=$(expr "x$arg" : "^x--target=\(.*\)$")
            if [ "x$target" = "x" ]; then
                usage 1>&2
                exit 1
            fi
            ;;
        --sources|--cflags)
            check_action
            action=$arg
            ;;
        *)
            usage 1>&2
            exit 1
            ;;
    esac
done

list_c_sources()
{
    local asl_all asl_32bit asl_64bit asl_arch

    find src -name '*.c' -print

    asl_all="\
        src/musl-locale/catclose.c \
        src/musl-locale/catgets.c \
        src/musl-locale/catopen.c \
        src/musl-ctype/wctrans.c \
        src/musl-multibyte/mblen.c \
        "

    asl_32bit="\
        src/libdl_support.c \
        src/locale_support.c \
        src/math_support.c \
        src/stdlib_support.c \
        src/wchar_support.c \
        src/locale/duplocale.c \
        src/locale/freelocale.c \
        src/locale/localeconv.c \
        src/locale/newlocale.c \
        src/locale/uselocale.c \
        src/stdio/stdio_impl.c \
        src/stdio/strtod.c \
        src/stdio/vfprintf.c \
        src/stdio/vfwprintf.c \
        src/msun/e_log2.c \
        src/msun/e_log2f.c \
        src/msun/s_nan.c \
        src/musl-ctype/iswalnum.c \
        src/musl-ctype/iswalpha.c \
        src/musl-ctype/iswblank.c \
        src/musl-ctype/iswcntrl.c \
        src/musl-ctype/iswctype.c \
        src/musl-ctype/iswdigit.c \
        src/musl-ctype/iswgraph.c \
        src/musl-ctype/iswlower.c \
        src/musl-ctype/iswprint.c \
        src/musl-ctype/iswpunct.c \
        src/musl-ctype/iswspace.c \
        src/musl-ctype/iswupper.c \
        src/musl-ctype/iswxdigit.c \
        src/musl-ctype/towctrans.c \
        src/musl-ctype/wcswidth.c \
        src/musl-ctype/wcwidth.c \
        src/musl-locale/iconv.c \
        src/musl-locale/intl.c \
        src/musl-locale/isalnum_l.c \
        src/musl-locale/isalpha_l.c \
        src/musl-locale/isblank_l.c \
        src/musl-locale/iscntrl_l.c \
        src/musl-locale/isdigit_l.c \
        src/musl-locale/isgraph_l.c \
        src/musl-locale/islower_l.c \
        src/musl-locale/isprint_l.c \
        src/musl-locale/ispunct_l.c \
        src/musl-locale/isspace_l.c \
        src/musl-locale/isupper_l.c \
        src/musl-locale/iswalnum_l.c \
        src/musl-locale/iswalpha_l.c \
        src/musl-locale/iswblank_l.c \
        src/musl-locale/iswcntrl_l.c \
        src/musl-locale/iswctype_l.c \
        src/musl-locale/iswdigit_l.c \
        src/musl-locale/iswgraph_l.c \
        src/musl-locale/iswlower_l.c \
        src/musl-locale/iswprint_l.c \
        src/musl-locale/iswpunct_l.c \
        src/musl-locale/iswspace_l.c \
        src/musl-locale/iswupper_l.c \
        src/musl-locale/iswxdigit_l.c \
        src/musl-locale/isxdigit_l.c \
        src/musl-locale/langinfo.c \
        src/musl-locale/strcasecmp_l.c \
        src/musl-locale/strcoll.c \
        src/musl-locale/strerror_l.c \
        src/musl-locale/strfmon.c \
        src/musl-locale/strftime_l.c \
        src/musl-locale/strncasecmp_l.c \
        src/musl-locale/strxfrm.c \
        src/musl-locale/tolower_l.c \
        src/musl-locale/toupper_l.c \
        src/musl-locale/towctrans_l.c \
        src/musl-locale/towlower_l.c \
        src/musl-locale/towupper_l.c \
        src/musl-locale/wcscoll.c \
        src/musl-locale/wcsxfrm.c \
        src/musl-locale/wctrans_l.c \
        src/musl-locale/wctype_l.c \
        src/musl-math/frexp.c \
        src/musl-math/frexpf.c \
        src/musl-math/frexpl.c \
        src/musl-multibyte/btowc.c \
        src/musl-multibyte/internal.c \
        src/musl-multibyte/mbrlen.c \
        src/musl-multibyte/mbrtowc.c \
        src/musl-multibyte/mbsinit.c \
        src/musl-multibyte/mbsnrtowcs.c \
        src/musl-multibyte/mbsrtowcs.c \
        src/musl-multibyte/mbstowcs.c \
        src/musl-multibyte/mbtowc.c \
        src/musl-multibyte/wcrtomb.c \
        src/musl-multibyte/wcsnrtombs.c \
        src/musl-multibyte/wcsrtombs.c \
        src/musl-multibyte/wcstombs.c \
        src/musl-multibyte/wctob.c \
        src/musl-multibyte/wctomb.c \
        src/musl-stdio/printf.c \
        src/musl-stdio/snprintf.c \
        src/musl-stdio/sprintf.c \
        src/musl-stdio/vprintf.c \
        src/musl-stdio/vsprintf.c \
        src/musl-stdio/swprintf.c \
        src/musl-stdio/vwprintf.c \
        src/musl-stdio/wprintf.c \
        src/wcstox/floatscan.c \
        src/wcstox/intscan.c \
        src/wcstox/shgetc.c \
        src/wcstox/wcstol.c \
        src/wcstox/wcstod.c \
        "

    asl_64bit=""

    echo $target | grep -q 64
    if [ $? -ne 0 ]; then
        asl_arch=$asl_32bit
    else
        asl_arch=$asl_64bit
    fi

    for f in $asl_all $asl_arch; do
        echo "../android/support/$f"
    done
}

list_cxx_sources()
{
    find src -name '*.cpp' -a -not -name 'android_jni.cpp' -print
}

print_cflags()
{
    local cflags
    cflags="-fPIC -g -O2"
    cflags="$cflags -DANDROID -D__ANDROID__ -DNDEBUG"
    cflags="$cflags -Drestrict=__restrict__"
    cflags="$cflags -ffunction-sections -fdata-sections"
    cflags="$cflags -I$CRYSTAX_SRCDIR/include"
    cflags="$cflags -I$CRYSTAX_SRCDIR/../android/support/src/locale"
    cflags="$cflags -I$CRYSTAX_SRCDIR/../android/support/src/musl-locale"
    #cflags="$cflags -I$CRYSTAX_SRCDIR/../cxx-stl/system"
    echo $cflags
}

if [ "x$action" = "x" ]; then
    usage 1>&2
    exit 1
fi

case $action in
    --sources)
        list_c_sources
        list_cxx_sources
        ;;
    --cflags)
        print_cflags
        ;;
    *)
        echo "ERROR: Unsupported action: $action"
        exit 1
        ;;
esac
